name: Test Binary Build

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-build:
    name: Test Build on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.11']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
          echo "$HOME\.cargo\bin" >> $GITHUB_PATH
        else
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        fi
      shell: bash

    - name: Install dependencies
      run: |
        uv sync
        uv run python -m spacy download en_core_web_trf
      shell: bash

    - name: Test build process
      run: |
        uv run python build_binary.py
      shell: bash
      env:
        CI: true

    - name: Test binary functionality
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          binary_name="dist/pii-cli-windows-amd64.exe"
        elif [[ "$RUNNER_OS" == "macOS" ]]; then
          if [[ "$(uname -m)" == "arm64" ]]; then
            binary_name="dist/pii-cli-darwin-arm64"
          else
            binary_name="dist/pii-cli-darwin-amd64"
          fi
        else
          binary_name="dist/pii-cli-linux-amd64"
        fi
        
        echo "Testing binary: $binary_name"
        if [[ -f "$binary_name" ]]; then
          # Test help command
          timeout 30 "$binary_name" --help
          
          # Test basic functionality
          echo "Contact John Doe at john@example.com or call 555-123-4567" | timeout 30 "$binary_name" --strategy mask --quiet
          
          echo "Binary test completed successfully"
        else
          echo "Binary not found: $binary_name"
          ls -la dist/
          exit 1
        fi
      shell: bash