name: Build and Release Binaries

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to create release for'
        required: true
        default: 'v0.1.0'

jobs:
  build:
    name: Build ${{ matrix.platform }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            platform: linux-amd64
            python-version: '3.11'
          - os: windows-latest
            platform: windows-amd64
            python-version: '3.11'
          - os: macos-latest
            platform: darwin-amd64
            python-version: '3.11'
          - os: macos-14
            platform: darwin-arm64
            python-version: '3.11'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install uv
      run: |
        if [[ "$RUNNER_OS" == "Windows" ]]; then
          powershell -c "irm https://astral.sh/uv/install.ps1 | iex"
          echo "$HOME\.cargo\bin" >> $GITHUB_PATH
        else
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        fi
      shell: bash

    - name: Install dependencies
      run: |
        uv sync
      shell: bash

    - name: Build binary
      run: |
        uv run python build_binary.py
      shell: bash
      env:
        CI: true

    - name: Upload binary artifact
      uses: actions/upload-artifact@v3
      with:
        name: pii-cli-${{ matrix.platform }}
        path: dist/pii-cli-*
        retention-days: 1

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v3
      with:
        path: artifacts

    - name: Prepare release assets
      run: |
        mkdir release-assets
        find artifacts -name 'pii-cli-*' -type f -exec cp {} release-assets/ \;
        ls -la release-assets/

    - name: Determine tag
      id: tag
      run: |
        if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
          echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
        else
          echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        fi

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ steps.tag.outputs.tag }}
        name: Release ${{ steps.tag.outputs.tag }}
        body: |
          ## PII CLI Binary Release ${{ steps.tag.outputs.tag }}
          
          Standalone binaries for multiple platforms. No Python installation required.
          
          ### Download Instructions
          
          1. Download the appropriate binary for your platform:
             - `pii-cli-linux-amd64` - Linux x86_64
             - `pii-cli-darwin-amd64` - macOS Intel
             - `pii-cli-darwin-arm64` - macOS Apple Silicon  
             - `pii-cli-windows-amd64.exe` - Windows x86_64
          
          2. Make executable (Linux/macOS):
             ```bash
             chmod +x pii-cli-*
             ```
          
          3. Test installation:
             ```bash
             ./pii-cli-* --help
             ```
          
          ### Features
          - Regex-based PII detection
          - spaCy transformer model for advanced NLP
          - Interactive and batch processing modes
        files: release-assets/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
